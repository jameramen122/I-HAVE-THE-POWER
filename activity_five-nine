activity 5... Hashtables... woot.
#hash tables

$employee1=[ordered]@{}
$employee2=[ordered]@{}
$employee3=[ordered]@{}

$employee1["First"] = "Mary" 
$employee1["Last"]= "Hopper"
$employee1["ID"]= "001"
$employee1["Job"]= "software Developer"

$employee2["First"] = "John"
$employee2["Last"]= "Williams"
$employee2["ID"]= "002"
$employee2["Job"]= "Web Developer"

$employee1.username= "mhopper001"
$employee2.username= "jwilliams002"
$employee1["Job"]= "Software Lead"

$employee3["First"] = "Alex" 
$employee3["Last"]= "Moran"
$employee3["ID"]= "003"
$employee3["Job"]= "Software Developer"

$employee3["username"]= "amoran003"

$employee1["status"]= "Management"
$employee2["status"]= "Intermediate"
$employee3["status"]= "Entry Level"

#Get-Service | format-table * --> gets more info out of a command
#get-service | format-list * --> this is another one that gets more info
#Get-Service BTAGService| format-list *
#Get-service | Get-Member --> similar to the one below this. but different info kinda.
#Get-Member -inputObject Get-Service --> simular to the one above it, but different info kinda.
#(get-service bfe).starttype --> gets the starttype of a service called BFE, base filtering engine. It manages firewall and Internet Protocol security (IPsec) policies and implements user mode filtering. 
#(get-service bfe).stop() --> stops a service called BFE
#write-host pushes right to the screen
#write-output allows other commands to adjust the info like 'sort'
#
#use 'Get-Command -verb format' to find the ways to format and squeeze out more information on the commands used

#get-service | sort-object -Property  status --> sorts objects off of their running or stopped status
#get-service | group-object -Property  status --> displays a number of running and stopped services

#Get-Service | Where-Object { $_.status -eq "Running"} --> this displays only the Running services! :3
#hehehehehehe
#get-process | select-object -first 10 --> basicly the head command but with more words. >:3

#get-process | where-object processname -ne "Idle" | sort-object starttime | select-object -last 10 | Format-Table processname, starttime
# This one ^^^^^^ looks for process start time

#get-unique --> requires a sort before it works. finds all unique char. no duplicates

##ACTIVITY SIX##
 #1.
get-process | where-object processname -ne "Idle" | sort-object starttime | select-object -last 1 -first 1| Format-Table processname, starttime

 #2.Get-date | format-table gave me names for everything :3
Get-date | Select-Object DayofWeek

 #3.
Get-HotFix

 #4.
Get-HotFix | select Description, InstalledOn, HotFixID | sort Description

 #5.
Get-HotFix | select description, HotFixID, InstalledOn | sort description


**Acti vit y SEVEN**
  $compinfo= Get-WmiObject win32_computersystem | select -ExpandProperty name
  $OSinfo2= Get-WmiObject win32_OperatingSystem | select -ExpandProperty caption
  $OSinfo= Get-WmiObject win32_OperatingSystem | select -ExpandProperty version
  $manfactinfo= Get-WmiObject win32_computersystem | select -ExpandProperty Manufacturer
  $diskinfo= Get-WmiObject win32_LogicalDisk | select -ExpandProperty Path
  $diskinfo2= $diskinfo | select -ExpandProperty path

  $wmiNotMyObject = New-Object Object

  add-member -Me NoteProperty -na name_boi -value $compinfo -InputObject $wmiNotMyObject
  add-member -Me NoteProperty -na operator_boi -value $OSinfo2 -InputObject $wmiNotMyObject
  add-member -Me NoteProperty -na version_boi -value $osinfo -InputObject $wmiNotMyObject
  add-member -Me NoteProperty -na manufact_bois -value $manfactinfo -InputObject $wmiNotMyObject
  add-member -Me NoteProperty -na disky_bois -value $diskinfo2 -InputObject $wmiNotMyObject
  
  ACTIVITY EIGHT

  #Get-WmiObject Win32_Computersystem

  #Get-WmiObject Win32_BIOS

  #Get-WmiObject Win32_OperatingSystem

  #Get-WmiObject Win32_LogicalDisk
  $compinfo= Get-WmiObject win32_computersystem | select -ExpandProperty name
  $OSinfo2= Get-WmiObject win32_OperatingSystem | select -ExpandProperty caption
  $OSinfo= Get-WmiObject win32_OperatingSystem | select -ExpandProperty version
  $manfactinfo= Get-WmiObject win32_computersystem | select -ExpandProperty Manufacturer
  $diskinfo= Get-WmiObject win32_LogicalDisk | select -ExpandProperty Path
  $diskinfo2= $diskinfo | select -ExpandProperty path

  $wmiNotMyObject = New-Object Object

  add-member -Me NoteProperty -na name_boi -value $compinfo -InputObject $wmiNotMyObject
  add-member -Me NoteProperty -na operator_boi -value $OSinfo2 -InputObject $wmiNotMyObject
  add-member -Me NoteProperty -na version_boi -value $osinfo -InputObject $wmiNotMyObject
  add-member -Me NoteProperty -na manufact_bois -value $manfactinfo -InputObject $wmiNotMyObject
  add-member -Me NoteProperty -na disky_bois -value $diskinfo2 -InputObject $wmiNotMyObject
  
  ACTIVITY NINE!!!! >:3


